{"version":3,"sources":["frontend/HomeScreen.js","frontend/data.js","frontend/ProductsScreen.js","frontend/ProductScreen.js","App.js","serviceWorker.js","index.js"],"names":["HomeScreen","props","className","products","_id","image","categorie","name","description","price","countInStock","ProductsScreen","datas","map","product","key","to","src","alt","href","title","ProductScreen","useState","qty","setQty","setPrice","find","x","match","params","id","console","log","value","onChange","e","target","changePrice","Array","keys","onClick","history","push","App","document","querySelector","classList","add","remove","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ba361e95.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction HomeScreen(props) {\r\n    return (\r\n        <div className='grid'>\r\n         \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeScreen;","export default {\r\n    products: [{\r\n        _id: 1,\r\n        image: '/images/candy.jpg',\r\n        categorie: '1kg',\r\n        name: '\"THANK YOU\" 8-PIECE',\r\n        description: 'Qui non in proident labore dolor elit adipisicing irure tempor amet do.',\r\n        price: 20.90,\r\n        countInStock: 0,\r\n    },\r\n    {\r\n        _id: 2,\r\n        image: '/images/candy.jpg',\r\n        categorie: '500g',\r\n        name: '\"THANK YOU\" 3-PIECE',\r\n        description: 'Qui non in proident labore dolor elit adipisicing irure tempor amet do.',\r\n        price: 12.90,\r\n        countInStock: 6,\r\n    },\r\n    {\r\n        _id: 3,\r\n        image: '/images/candy.jpg',\r\n        categorie: '1kg',\r\n        name: '\"XOXO\" 8-PIECE CANDY',\r\n        description: 'Qui non in proident labore dolor elit adipisicing irure tempor amet do.',\r\n        price: 10,\r\n        countInStock: 6,\r\n    },\r\n    {\r\n        _id: 4,\r\n        image: '/images/candy.jpg',\r\n        categorie: '500g',\r\n        name: '\"XOXO\" 3-PIECE CANDY',\r\n        description: 'Qui non in proident labore dolor elit adipisicing irure tempor amet do.',\r\n        price: 12.90,\r\n        countInStock: 6,\r\n    },\r\n    {\r\n        _id: 5,\r\n        image: '/images/candy.jpg',\r\n        categorie: '1kg',\r\n        name: '\"CONGRATS\" 8-PIECE',\r\n        description: 'Qui non in proident labore dolor elit adipisicing irure tempor amet do.',\r\n        price: 12.90,\r\n        countInStock: 6,\r\n    },\r\n    {\r\n        _id: 6,\r\n        image: '/images/candy.jpg',\r\n        categorie: '500g',\r\n        name: '\"CONGRATS\" 3-PIECE',\r\n        description: 'Qui non in proident labore dolor elit adipisicing irure tempor amet do.',\r\n        price: 12.90,\r\n        countInStock: 6,\r\n    },\r\n    {\r\n        _id: 7,\r\n        image: '/images/candy.jpg',\r\n        categorie: '1kg',\r\n        name: 'SIGNATURE 8-PIECE CANDY',\r\n        description: 'Qui non in proident labore dolor elit adipisicing irure tempor amet do.',\r\n        price: 12.90,\r\n        countInStock: 6,\r\n    },\r\n    {\r\n        _id: 8,\r\n        image: '/images/candy.jpg',\r\n        categorie: '500g',\r\n        name: 'SIGNATURE 3-PIECE CANDY',\r\n        description: 'Qui non in proident labore dolor elit adipisicing irure tempor amet do.',\r\n        price: 12.90,\r\n        countInStock: 6,\r\n    }]\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport datas from './data';\r\n\r\n\r\nfunction ProductsScreen(props) {\r\n    return (\r\n        <div>\r\n            <h1>Shop</h1>\r\n            <ul className=\"products\">\r\n                {datas.products.map((product) => (\r\n                    <li key={product._id}>\r\n                        <div className=\"product\">\r\n                            <Link to={'/products/' + product._id}>\r\n                            <img\r\n                                className=\"product-image\"\r\n                                src={product.image}\r\n                                alt=\"product\"\r\n                            />\r\n                            </Link>\r\n                            <div className=\"product-name\">\r\n                            <Link to={'/products/' + product._id}>{product.name}</Link>\r\n                            </div>\r\n                            <div>{product.description}</div>\r\n                            <div className=\"product-price\">\r\n                                <div>${product.price}</div>\r\n                                <a href='/products' title=\"ADD TO CART\" ><div>+</div></a>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductsScreen;","import React, {useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport datas from './data';\r\n\r\nfunction ProductScreen(props) {\r\n\r\n    const [qty, setQty] = useState(1)\r\n    const [price, setPrice] = useState(0)\r\n\r\n    const product = datas.products.find(x => x._id == props.match.params.id)\r\n    console.log(product)\r\n\r\n    const handleAddToCart = () => {\r\n        props.history.push('/cart/' + props.match.params.id + '?qty=' + qty);\r\n      };\r\n    \r\n    const changePrice = (e) =>{\r\n        setPrice(e * product.price)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"back-to-result\">\r\n                <Link to=\"/products\">Back to result</Link>\r\n            </div>\r\n            <div className=\"details\">\r\n                <div className=\"details-info\">\r\n                    <ul>\r\n                        <li>\r\n                            <h4>{product.name}</h4>\r\n                        </li>\r\n                        <li>\r\n                            Price: <b>${product.price}</b>\r\n                        </li>\r\n                        <li>\r\n                            Description:\r\n                            <div>{product.description}</div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"details-image\">\r\n                    <img src={product.image} alt=\"product\"></img>\r\n                </div>\r\n                <div className=\"details-action\">\r\n                    <ul>\r\n                        <li>Price: {price === 0 ? product.price : price}</li>\r\n                        <li>\r\n                            Status:{' '}\r\n                            {product.countInStock > 0 ? 'In Stock' : 'Unavailable.'}\r\n                        </li>\r\n                        <li>\r\n                        Qty:{' '}\r\n                            <select\r\n                                value={qty}\r\n                                onChange={(e) => {\r\n                                setQty(e.target.value);\r\n                                changePrice(e.target.value)\r\n                                }}\r\n                            >\r\n                                {[...Array(product.countInStock).keys()].map((x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                    {x + 1}\r\n                                </option>\r\n                                ))}\r\n                            </select>\r\n                        </li>\r\n                        <li>\r\n                            {product.countInStock > 0 && (\r\n                                <button\r\n                                onClick={handleAddToCart}\r\n                                className=\"button primary\"\r\n                                >\r\n                                Add to Cart\r\n                                </button>\r\n                            )}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductScreen;","import React from 'react';\nimport { BrowserRouter, Route, Link, Switch } from 'react-router-dom';\nimport HomeScreen from './frontend/HomeScreen';\nimport ProductsScreen from './frontend/ProductsScreen';\nimport ProductScreen from './frontend/ProductScreen';\nimport './App.scss';\n\nfunction App() {\n\n  const openMenu = () => {\n    document.querySelector('.sidebar').classList.add('open');\n  };\n  const closeMenu = () => {\n    document.querySelector('.sidebar').classList.remove('open');\n  };\n\n  return (\n    <BrowserRouter>\n    <div className='App'>\n      <div className=\"grid-container\">\n        <header className=\"header\">\n          <div className=\"header-links\">\n            <button onClick={openMenu}>&#9776;</button>\n          </div>\n          <div className=\"brand\">\n              <Link to=\"/\">Swedish Candy Bar</Link>\n          </div>\n          <ul className=\"categories\">\n            <li>\n              <Link to=\"/products/\">Shop</Link>\n            </li>\n          </ul>\n        </header>\n        <aside className=\"sidebar\">\n          <h3>Categories</h3>\n          <button className=\"sidebar-close-button\" onClick={closeMenu}>\n            x\n          </button>\n          <ul className=\"categories\">\n            <li>\n              <Link to=\"/\">Sour</Link>\n            </li>\n            <li>\n              <Link to=\"/\">Mix</Link>\n            </li>\n            <li>\n              <Link to=\"/\">Chocolate</Link>\n            </li>\n          </ul>\n        </aside>\n        <main className=\"main\">\n          <div className=\"content\">\n            <Switch>\n              <Route path=\"/products/:id\" component={ProductScreen} />\n              <Route path=\"/products/\" component={ProductsScreen} />\n              <Route path=\"/\" exact={true} component={HomeScreen}/>\n            </Switch>\n          </div>\n        </main>\n        <footer className=\"footer\">All right reserved.</footer>\n      </div>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}